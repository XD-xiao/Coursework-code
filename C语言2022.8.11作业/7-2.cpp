/*----------------------------------------------------------------------
【程序改错】
------------------------------------------------------------------------
题目：将[1,255]间的每个10进制数，转换为8位二进制数，存入一维数组a中。
      再将a数组中前4个元素和后4个元素分别转换成两个10进制数，找出这两个数
      乘积等于9的所有组合。
例如：当n=204时，转换为8位二进制数，存入一维数组a中，使得a[0]~a[7]分别为
      {0,0,1,1,0,0,1,1}。再将a[0]~a[3]转换为10进制数3；a[4]~a[7]转换为十
      进制数3，3 * 3=9，满足两个数乘积等于9的组合，输出。

程序运行结果如下：
204: 3 * 3=9
152: 1 * 9=9
137: 9 * 1=9
------------------------------------------------------------------------
注意：不得增行或删行，也不得更改程序的结构。
----------------------------------------------------------------------*/
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <ctype.h>
#include <string.h>

void find_9()
{
    char a[8];
    int i,j,n,first,second,mul;
    for(i=255;i>0;--i)
    {
        n=i;
        j=0;
/***********FOUND***********/
        while(n&&i>=128)		//只有大于128才能满足8个位 
        {
            a[j++]=n%2;
            n/=2;
        }

        first=second=0;
/***********FOUND***********/
        for(j=0;j<4;j++)
        {
            first=2*first+a[j];
            second=2*second+a[j+4];
        }
        mul= first*second;
/***********FOUND***********/
        if(mul==9)
			printf("%3d:%2d *%2d=9\n",i,first,second);
    }
}

int main()
{
    find_9();
    return 0;
}
