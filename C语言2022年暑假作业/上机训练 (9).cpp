/*2、编程题
【程序功能】
在所有三位整数中找出平方数中有连续的三位数字是该数本身的数。
例如，250的平方是62500，250便是所要找的一个满足条件的三位整数。
【编程要求】
（1）编写函数int find(long a[][2])。函数功能是将三位数中所有满足上述条件的数及其平方数存入a指向的二维数组中，函数返回满足上述条件的三位数的个整数。
（2）编写main函数。函数功能是声明二维数组a，用数组a作为实参调用函数find，输出满足条件的三位整数及其平方数到屏幕。
【测试数据与运行结果】
屏幕输出：
  i        power
100       10000
250       62500
376       141376
500       250000
600       360000
625       390625
760       577600
*/
#include<stdio.h>
int find(long a[][2])
{
	int i,j,count=0,pow_num;
	for(i=100;i<=999;i++)
	{
		pow_num=j=i*i;
		while(j)
		{
			if(j%1000==i)
			{
				a[count][0]=i;
				a[count++][1]=pow_num;
				break;
			}
			else
				j/=10;
		}
	}
	return count;
}
main()
{
	long a[100][2];
	int i,len=find(a);
	for(i=0;i<len;i++)
		printf("%5d\t%5d\n",a[i][0],a[i][1]);
}



